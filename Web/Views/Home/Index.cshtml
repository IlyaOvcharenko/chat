@{
    ViewBag.Title = "Chatroom";
}


<style>
    #chatBox {
        min-height: 500px;
    }
    #inputForm {
        padding: 10px;
    }
</style>

@{ Html.RenderAction("LoginBlock", "Auth"); }

<div class="container">
    <div class="row">
        <div class="col-md-10">
            <div class="jumbotron">
                <div id="chatBox"></div>
            </div>


        </div>
        <div class="col-md-2">
            <div class="sidebar-nav-fixed pull-right affix">

                <div class="well">
                    <div>
                        <h4> Online:</h4>
                    </div>
                    <div id="onlineUsers" >
                        
                    </div>

                </div>
            </div>

        </div>
    </div>
    <div class="navbar navbar-fixed-bottom navbar-default">
        <div id="inputForm">
            <div class="form-group">
                <div class="col-md-10 col-md-offset-2">
                    <div class="col-md-8">
                        <input type="text" id="message" class="form-control" />
                    </div>
                    <div class="col-md-1">
                        <input type="button" id="sendMessage" value="Отправить" class="btn btn-success"/>
                    </div>
                </div>

            </div>
                
               
        </div>
    </div>
    
</div>

@section scripts
{
    <script type="text/javascript">
        $(function() {
            var isConnected = false;
            var messageQueue = [];

            var chat = $.connection.chatHub;

            chat.client.addMessages = function (messages) {
                $.each(messages, function(i, message) {
                    $('#chatBox').append('<div><b>' + htmlEncode(message.Author)
                        + '</b>: ' + htmlEncode(message.Text) + '</div>');
                });

            };

            chat.client.userConnected = function (name) {      
                $('#chatBox').append('<div>Приветствуем <b>' + htmlEncode(name)
                        + '</b></div>');
            };

            chat.client.userDisconnected = function (name) {
                $('#chatBox').append('<div><b>' + htmlEncode(name)
                        + '</b> вышел</div>');
            };

            chat.client.changeUserList = function (users) {
                $('#onlineUsers').empty();
                $.each(users, function(i, user) {
                    $('#onlineUsers').append('<div><b>' + htmlEncode(user)
                        + '</b></div>');
                });
            };

            $.connection.hub.start();

            $.connection.hub.stateChanged(function(state) {
                isConnected = state.newState === $.signalR.connectionState.connected;
                if (isConnected && messageQueue && messageQueue.length > 0) {
                    sendMessageQueue();
                }
            });

            $.connection.hub.disconnected(function() {
                setTimeout(function() {
                    $.connection.hub.start();
                }, 5000);
            });

            $('#sendMessage').click(function() {
                var message = { text: $('#message').val() };
                if (!message.text)
                    return;

                messageQueue.push(message);
                $('#message').val('');

                if (isConnected)
                    sendMessageQueue();
            });

            function sendMessageQueue() {
                chat.server.sendMessageQueue(messageQueue).done(function() {
                    messageQueue = [];
                });
            }

        });

        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

    </script>
}
